#SingleInstance Force#NoEnv#InstallKeybdHook#InstallMouseHook#PersistentSetDefaultMouseSpeed,0Return; ----------------------------------------------------------------------------------; 当按下右键时开始鼠标手势，并且记录一些初始信息，并且开启记时器，记录中间的转折点; （理想计划）在鼠标的手势发生转折时，记录一个转折点，而当鼠标移动方向相同时，只记录;   		其中一个点; 当松开鼠标右键时，根据记录的转折顺序判断路径信息（即图案）; ----------------------------------------------------------------------------------global dirHistory :=  "S"RButton::	; 所有以pt开头的都是point的结构体，有x和y两个成员	global ptStart := {}    ; 初始点位置	global ptTurning := {}  ; 转折点位置	global ptPrevious := {} ; 上一时刻的点位置	; pt := {}	MouseGetPos, x, y	ptStart.x := x	ptStart.y := y	ptTurning := ptStart	SetTimer, AHKGestures_MouseMove, 20	ReturnRButton Up::	; GoSub, AHKGestures_MouseMove	SetTimer, AHKGestures_MouseMove, Off	dirHistory := "S"	; Clipboard := ptTurning.x "`t" ptTurning.y	; Clipboard := ptStart["x"] "`t" ptStart["y"]	Return	; 根据相信两个点的差别，计算一个特殊的反三角函数，用于Direction()计算方向ATan2(dy, dx){	; return (dx == 0) ? (dy > 0? 3.1415/2 : -3.1415 / 2) : (dy > 0 ? ATan(dy / dx) : -ATan(dy/dx))	return (dx >0) ? ATan(dy/dx) : (dx < 0) ? Atan(dy/dx) + 3.11415926 : (dy > 0) ? 3.1415926/2 : -3.1415926/2}; 返回的方向信息如下图;   3 2  1;    ↖↑↗;   4←8→ 0;    ↙↓↘;   5 6  7Direction(ptPrevious, curX, curY){	dx := curX - ptPrevious.x	dy := ptPrevious.y - curY	If (dx = 0 And dy = 0)		dir := 8	Else		; dir := Mod(Round( 1.27324 /2* ATan2(dy, dx) + 8), 8)		; 1.27324 = 180 / (pi/2) * 45		dir := Mod(Round( 1.27324 * ATan2(dy, dx) + 8), 8)		; 1.27324 = 180 / (pi/2) * 45	return dir}; 计时器的响应函数，当方向与上一个方向相同时，不记录此次移动，当方向与上一次不同时，记录此次移动的方向; 本来计划是上面那样的，但是目前在判断转折点(ptTurning)时出现了问题，所以还没有实现完整的AHKGestureAHKGestures_MouseMove:	; ptPrevious := ptTurning	MouseGetPos, x, y	dir := Direction(ptPrevious, x, y)	ptPrevious.x := x	ptPrevious.y := y	lastDir := SubStr(dirHistory, StrLen(dirHistory))	distance := Sqrt((ptTurning.x - x) ** 2 + (ptTurning.y - y) ** 2)	if (dir != 8 And dir != lastDir And distance > 30){ ; 判断转折点，但是目前不完善		dirHistory .= dir		ptTurning.x := x		ptTurning.y := y	}	; clipboard := 	ToolTip, % dirHistory "`n" dir "`t" lastDir "`t" distance "`n" ptTurning.x "`t" ptTurning.y, 0, 0	return; ------------------------------------; 脚本管理：重启与退出，与主要内容无关; ------------------------------------~Pause::$~#ScrollLock::	Suspendreturn$~#Esc::	WinGetActiveTitle, OutputVar	If InStr(OutputVar, A_ScriptName)		Reload	Return$~#^Esc::	ExitAppreturn